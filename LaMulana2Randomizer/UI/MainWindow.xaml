<Window x:Class="LaMulana2Randomizer.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LaMulana2Randomizer.UI"
        xmlns:main="clr-namespace:LaMulana2Randomizer"
        xmlns:vm="clr-namespace:LaMulana2Randomizer.ViewModels"
        mc:Ignorable="d"
        Title="{Binding Title}"  Width="580" Height="515" MinWidth="580" MinHeight="515">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:EnumBooleanConverter x:Key="enumBooleanConverter"/>
        <Style x:Key="OriginalShopCheck" TargetType="{x:Type CheckBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked, ElementName=ShopOriginal}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TootltipStyle" TargetType="{x:Type ToolTip}">
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="TextWrapping" Value="Wrap" />
                </Style>
            </Style.Resources>
            <Setter Property="MaxWidth" Value="300" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="GroupBox">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="Margin" Value="5" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="DarkGray"/>
            </Style>
        </Grid.Resources>
        <TabControl Margin="5,5,5,110">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontFamily" Value="Calibri"/>
                </Style>
            </TabControl.Resources>
            <TabItem Header="Items">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Items" Grid.Column="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Grid.Column="0" Margin="2,2,5,2">
                                    <TextBlock Text="Holy Grail" FontSize="16"/>
                                    <RadioButton Content="Starting Item" IsChecked="{Binding Settings.RandomGrail, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Starting}}"/>
                                    <RadioButton Content="Available at start" IsChecked="{Binding Settings.RandomGrail, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.AvailableAtStart}}"/>
                                    <RadioButton Content="Random" IsChecked="{Binding Settings.RandomGrail, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Random}}"/>
                                </StackPanel>
                                <StackPanel Grid.Row="0" Grid.Column="1" Margin="2">
                                    <TextBlock Text="Future Development Company" FontSize="16"/>
                                    <RadioButton Content="Starting Item" IsChecked="{Binding Settings.RandomFDC, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Starting}}"/>
                                    <RadioButton Content="Available at start" IsChecked="{Binding Settings.RandomFDC, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.AvailableAtStart}}"/>
                                    <RadioButton Content="Random" IsChecked="{Binding Settings.RandomFDC, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Random}}"/>
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=OriginalShopCheck, Path=IsChecked}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Grid.Column="1" Margin="2">
                                    <TextBlock Text="Hand Scanner" FontSize="16"/>
                                    <RadioButton Content="Starting Item" IsChecked="{Binding Settings.RandomScanner, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Starting}}"/>
                                    <RadioButton Content="Available at start" IsChecked="{Binding Settings.RandomScanner, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.AvailableAtStart}}"/>
                                    <RadioButton Content="Random" IsChecked="{Binding Settings.RandomScanner, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Random}}"/>
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=OriginalShopCheck, Path=IsChecked}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Grid.Column="0" Margin="2,2,5,2">
                                    <TextBlock Text="Codices" FontSize="16"/>
                                    <RadioButton Content="Starting Item" IsChecked="{Binding Settings.RandomCodices, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Starting}}"/>
                                    <RadioButton Content="Available at start" IsChecked="{Binding Settings.RandomCodices, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.AvailableAtStart}}"/>
                                    <RadioButton Content="Random" IsChecked="{Binding Settings.RandomCodices, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Random}}"/>
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=OriginalShopCheck, Path=IsChecked}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>
                                <StackPanel Grid.Row="2" Grid.Column="0" Margin="2,2,5,2">
                                    <TextBlock Text="Ring" FontSize="16"/>
                                    <RadioButton Content="Starting Item" IsChecked="{Binding Settings.RandomRing, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Starting}}"/>
                                    <RadioButton Content="Available at start" IsChecked="{Binding Settings.RandomRing, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.AvailableAtStart}}"/>
                                    <RadioButton Content="Random" IsChecked="{Binding Settings.RandomRing, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Random}}"/>
                                </StackPanel>
                                <StackPanel Grid.Row="2" Grid.Column="1" Margin="2,2,5,2">
                                    <TextBlock Text="Shell Horn" FontSize="16"/>
                                    <RadioButton Content="Starting Item" IsChecked="{Binding Settings.RandomShellHorn, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Starting}}"/>
                                    <RadioButton Content="Available at start" IsChecked="{Binding Settings.RandomShellHorn, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.AvailableAtStart}}"/>
                                    <RadioButton Content="Random" IsChecked="{Binding Settings.RandomShellHorn, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ItemPlacement.Random}}"/>
                                </StackPanel>
                                <Grid.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <StackPanel>
                                            <TextBlock Text="Starting Item"  FontWeight="Bold"/>
                                            <TextBlock Text="Start the game with the item."/>
                                            <TextBlock Text="Available at Start"  FontWeight="Bold"/>
                                            <TextBlock Text="Placed in a location accessable from the start."/>
                                            <TextBlock Text="Random"  FontWeight="Bold"/>
                                            <TextBlock Text="Fully randomised."/>
                                        </StackPanel>
                                    </ToolTip>
                                </Grid.ToolTip>
                            </Grid>
                        </GroupBox>
                    <StackPanel Grid.Column="1">
                        <GroupBox Header="Mantras">
                            <StackPanel Margin="2">
                                <RadioButton Content="Randomised" IsChecked="{Binding Settings.MantraPlacement, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:MantraPlacement.Random}}"/>
                                <RadioButton Content="Only at murals" IsChecked="{Binding Settings.MantraPlacement, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:MantraPlacement.OnlyMurals}}"/>
                                <RadioButton Content="Original Placement" IsChecked="{Binding Settings.MantraPlacement, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:MantraPlacement.Original}}"/>
                                <StackPanel.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <StackPanel>
                                            <TextBlock Text="Randomised"  FontWeight="Bold"/>
                                            <TextBlock Text="Fully randomises mantra placement."/>
                                            <TextBlock Text="Only Murals"  FontWeight="Bold"/>
                                            <TextBlock Text="Mantras only placed at mantra murals."/>
                                            <TextBlock Text="Original"  FontWeight="Bold"/>
                                            <TextBlock Text="Mantras are placed at original locations."/>
                                        </StackPanel>
                                    </ToolTip>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Shops">
                            <StackPanel Margin="5">
                                <RadioButton Name="RandomShopCheck" Content="Randomised" IsChecked="{Binding Settings.ShopPlacement, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ShopPlacement.Random}}"/>
                                <RadioButton Name="OnlyOneShopCheck" Content="At least one item" IsChecked="{Binding Settings.ShopPlacement, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ShopPlacement.AtLeastOne}}"/>
                                <RadioButton Name="OriginalShopCheck" Content="Original Items" IsChecked="{Binding Settings.ShopPlacement, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ShopPlacement.Original}}"/>
                                <StackPanel.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <StackPanel>
                                            <TextBlock Text="Randomised"  FontWeight="Bold"/>
                                            <TextBlock Text="Fully randomises shop contents."/>
                                            <TextBlock Text="At least one"  FontWeight="Bold"/>
                                            <TextBlock Text="Ensure every shops has atleast one item."/>
                                            <TextBlock Text="Original"  FontWeight="Bold"/>
                                            <TextBlock Text="Shops have their orginal contents."/>
                                        </StackPanel>
                                    </ToolTip>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Research Notes">
                            <StackPanel>
                                <CheckBox Name="ResearchCheck" Content="Randomised" IsChecked="{Binding Settings.RandomResearch}" Margin="0,2">
                                    <CheckBox.ToolTip>
                                        <ToolTip Style="{StaticResource TootltipStyle}">
                                            <TextBlock Text="Adds the Research Papers to the pool of random items."/>
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox Name="RemoveResearchCheck" IsChecked="{Binding Settings.RemoveResearch}" Content="Remove Research Notes" Margin="20,2,2,2">
                                    <CheckBox.ToolTip>
                                        <ToolTip Style="{StaticResource TootltipStyle}">
                                            <TextBlock Text="Removes the reasearch items from the pool but items can still be placed at research locations." />
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ResearchCheck, Path=IsChecked}" Value="True">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Other">
                            <StackPanel>
                                <CheckBox Name="RemoveMapsCheck" Content="Remove Maps" IsChecked="{Binding Settings.RemoveMaps}" Margin="0,2">
                                    <CheckBox.ToolTip>
                                        <ToolTip Style="{StaticResource TootltipStyle}">
                                            <TextBlock Text="Removes the maps from the item pool."/>
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox Name="RemoveSkullsCheck" Content="Remove Excess Skulls" IsChecked="{Binding Settings.RemoveSkulls}" Margin="0,2">
                                    <CheckBox.ToolTip>
                                        <ToolTip Style="{StaticResource TootltipStyle}">
                                            <TextBlock Text="Removes any excess skulls if the amount required for Nibiru dissonace has been changed."/>
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Logic" Height="26" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="-2,0" Width="49">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Logic" Grid.Row="0" Grid.Column="0">
                        <StackPanel>
                            <CheckBox Name="AllAccessibleCheck" IsChecked="{Binding Settings.AllAccessible}" Style="{StaticResource OriginalShopCheck}" Margin="0,2">
                                <TextBlock Text="All Locations Accessible." TextWrapping="Wrap"/>
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="."/>
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <CheckBox Name="FDCBacksideCheck" IsChecked="{Binding Settings.FDCForBacksides}" Style="{StaticResource OriginalShopCheck}" Margin="0,2">
                                <TextBlock Text="Require Future Development Company for backsides." TextWrapping="Wrap"/>
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Makes Future Development company required to logically enter Valhalla, Dark Lord's Mauseleum, Ancient Chaos, Hall of Malice and Eternal Prison."/>
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <CheckBox Name="LifeForHoMCheck" IsChecked="{Binding Settings.LifeForHoM}" Margin="0,2" Content="Require Life Sigil for Awoken Hall of Malice">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Requires Life Sigil for Awoken Hall of Malice to be in logic."/>
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <CheckBox Name="RandomCurseCheck" IsChecked="{Binding Settings.RandomCurses}" Margin="0,2" Content="Randomise Cursed Chests">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Randomises which chests will have the curse the Mulana Talsiman is needed to break."/>
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <StackPanel Orientation="Horizontal" Margin="21,0,0,2" Height="22">
                                <TextBlock Text="Amount of Cursed Chests" Height="15" Margin="0,0,2,0"/>
                                <TextBox x:Name="CursesTextBox" Width="20" HorizontalAlignment="Stretch" Margin="0,2,0,0">
                                    <TextBox.Text>
                                        <Binding Path="Settings.TotalCursedChests" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntRangeRule Min="0" Max="86"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <StackPanel.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Total number of cursed chests. Value between 0 and 86."/>
                                    </ToolTip>
                                </StackPanel.ToolTip>
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomCurseCheck, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Dissonance" Grid.Row="1" Grid.Column="0">
                        <StackPanel>
                            <CheckBox Name="RandomDissonanceCheck" IsChecked="{Binding Settings.RandomDissonance}" Margin="0,2" Content="Randomise Dissonance">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Randomise Dissonace, original Dissonance locations are replaced with chests."/>
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <StackPanel Orientation="Horizontal" Margin="21,0,0,2" Height="22">
                                <TextBlock Text="Guardians required" Height="15" Margin="0,0,2,0"/>
                                <TextBox x:Name="GuardiansTextBox" Width="20" HorizontalAlignment="Stretch" Margin="0,2,0,0">
                                    <Binding Path="Settings.RequiredGuardians" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:IntRangeRule Min="0" Max="9"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox>
                                <StackPanel.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Amount of Guardians required to seal the Corridor of Blood along with all the Dissonance. Value between 0 and 9"/>
                                    </ToolTip>
                                </StackPanel.ToolTip>
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomDissonanceCheck, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="1,0,0,2" Height="22">
                                <TextBlock Text="Skulls Required for Nibiru Dissonance" Height="15" Margin="0,0,2,0"/>
                                <TextBox x:Name="SkullTextBox" Width="20" HorizontalAlignment="Stretch" Margin="0,2,0,0">
                                    <Binding Path="Settings.RequiredSkulls" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:IntRangeRule Min="1" Max="12"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox>
                                <StackPanel.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Set number of Skulls required to get the Nibiru Dissonance. Value between 1 and 12"/>
                                    </ToolTip>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Glitches/Tricks" Grid.Column="1" Grid.RowSpan="2">
                        <StackPanel>
                            <CheckBox Name="CostumeClipCheck" IsChecked="{Binding Settings.CostumeClip}" Margin="0,2" Content="Costume Clip">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="."/>
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Combat">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Starting Weapon" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2">
                        <StackPanel Margin="2">
                            <CheckBox Content="Leather Whip" IsChecked="{Binding Settings.Whip}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=KnifeCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=RapierCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=KatanaCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=AxeCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=ShurikensCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=RShurikensCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=ESpearsCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=FlaresCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=CaltropsCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=ChakramsCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=BombsCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=PistolCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=ClaydollCheck, Path=IsChecked}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="KnifeCheck" Content="Knife" IsChecked="{Binding Settings.Knife}"/>
                            <CheckBox Name="RapierCheck" Content="Rapier" IsChecked="{Binding Settings.Rapier}"/>
                            <CheckBox Name="AxeCheck" Content="Axe" IsChecked="{Binding Settings.Axe}"/>
                            <CheckBox Name="KatanaCheck" Content="Katana" IsChecked="{Binding Settings.Katana}"/>
                            <CheckBox Name="ShurikensCheck" Content="Shurikens" IsChecked="{Binding Settings.Shuriken}"/>
                            <CheckBox Name="RShurikensCheck" Content="Rolling Shurikens" IsChecked="{Binding Settings.RollingShuriken}"/>
                            <CheckBox Name="ESpearsCheck" Content="Earth Spears" IsChecked="{Binding Settings.EarthSpear}"/>
                            <CheckBox Name="FlaresCheck" Content="Flares" IsChecked="{Binding Settings.Flare}"/>
                            <CheckBox Name="CaltropsCheck" Content="Caltrops" IsChecked="{Binding Settings.Caltrops}"/>
                            <CheckBox Name="ChakramsCheck" Content="Chakrams" IsChecked="{Binding Settings.Chakrams}"/>
                            <CheckBox Name="BombsCheck" Content="Bombs" IsChecked="{Binding Settings.Bomb}"/>
                            <CheckBox Name="PistolCheck" Content="Pistol" IsChecked="{Binding Settings.Pistol}"/>
                            <CheckBox Name="ClaydollCheck" Content="Claydoll Suit" IsChecked="{Binding Settings.ClayDoll}"/>
                            <StackPanel.ToolTip>
                                <ToolTip Style="{StaticResource TootltipStyle}">
                                    <TextBlock Text="If one weapon is selected it will be the starting weapon, if more than one weapon is selected the starting weapon will be randomly chosen from them." />
                                </ToolTip>
                            </StackPanel.ToolTip>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Guardians" Grid.Row="0" Grid.Column="1">
                            <CheckBox Name="DifficultyCheck" Content="Hard Guardian/Room Guarder requirements" IsChecked="{Binding Settings.HardBosses}">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Reduces the requirements to fight Guardians/Room Guarders to basically only what is need to start the fight. WARNING this can be really hard." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                        </GroupBox>
                    <GroupBox Header="Echidna Type" Grid.Row="1" Grid.Column="1">
                        <StackPanel Margin="5" >
                            <RadioButton Name="ChildEchidnaCheck" Content="Child" IsChecked="{Binding Settings.Echidna, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:EchidnaType.Child}}"/>
                            <RadioButton Name="TeenageEchidnaCheck" Content="Teenager" IsChecked="{Binding Settings.Echidna, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:EchidnaType.Teenager}}"/>
                            <RadioButton Name="YoungAdultEchidnaCheck" Content="Young Adult" IsChecked="{Binding Settings.Echidna, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:EchidnaType.YoungAdult}}"/>
                            <RadioButton Name="AdultEchidnaCheck" Content="Adult" IsChecked="{Binding Settings.Echidna, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:EchidnaType.Adult}}"/>
                            <RadioButton Name="RandomAdultEchidnaCheck" Content="Random" IsChecked="{Binding Settings.Echidna, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:EchidnaType.Random}}"/>
                            <RadioButton Name="NormalAdultEchidnaCheck" Content="Normal" IsChecked="{Binding Settings.Echidna, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:EchidnaType.Normal}}"/>
                            <StackPanel.ToolTip>
                                <ToolTip Style="{StaticResource TootltipStyle}">
                                    <StackPanel>
                                        <TextBlock Text="."/>
                                    </StackPanel>
                                </ToolTip>
                            </StackPanel.ToolTip>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Layout">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Entrances" Grid.Row="0" Grid.Column="0" >
                        <StackPanel>
                            <CheckBox Name="RandomHorizontal" IsChecked="{Binding Settings.RandomHorizontalEntrances}" Content="Randomise Horizontal Entrances" Margin="2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Randomises the left/right door ways, the doors are kept as pairs so a left will lead to a right." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <CheckBox Name="RandomLadder" IsChecked="{Binding Settings.RandomLadderEntrances}" Content="Randomise Ladder Entrances" Margin="2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Randomises the ladders and exit points of one way ladders, the ladder are kept as pairs so an up ladder will lead to a down ladder." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <CheckBox Name="RandomGates" IsChecked="{Binding Settings.RandomGateEntrances}" Content="Randomise Gate Entrances" Margin="2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Randomises the gates." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <CheckBox Name="RandomSoulGates" IsChecked="{Binding Settings.RandomSoulGateEntrances}" Content="Randomise Soul Gate Entrances" Margin="2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Randomises the soul gates by shuffling around the destinations and soul values, the soul gates are kept in soul value pairs e.g. a soul gate with a value of 2 will lead to another soul gate of value 2." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <CheckBox Name="IncludeNineGate" IsChecked="{Binding Settings.IncludeNineGates}" Content="Include Nine Soul Gates" Margin="20,2,2,2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Adds the two nine gates to the pool of randomised soul gates." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomSoulGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="RandomSoulPairs" IsChecked="{Binding Settings.RandomSoulPairs}" Content="Random Soul Pairs" Margin="20,2,2,2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Randomly chooses the soul pairs rather than uses the vanilla ones. E.g. there can be multiple pairs of Soul Gates that have the value of one" />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomSoulGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="FullRandomEntrances" IsChecked="{Binding Settings.FullRandomEntrances}" Content="Entrance Mix'n'Match" Margin="2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Takes all the entrances types selected to be randomised excluding soul gates and randomises them in a way where any entrance can lead to any other entrance." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=RandomHorizontal, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=RandomLadder, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=RandomGates, Path=IsChecked}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="IncludeUnique" IsChecked="{Binding Settings.IncludeUniqueTransitions}" Content="Include Unique Transitions" Margin="20,2,2,2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Adds the Annwfn to Immortal Battlefield, Takamagahara Shrine to Heavens Labyrinth, and Dark Star Lord's Mausoleum to Nibiru transitions to the entrance pool." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=FullRandomEntrances, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="ReduceDeadEndsCheck" IsChecked="{Binding Settings.ReduceDeadEndStarts}" Content="Reduce Dead End Starts" Margin="2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Attempts to stop the starting area's entrances leading into other areas that are dead ends." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Other" Grid.Row="1" Grid.Column="0">
                        <StackPanel Margin="2">
                            <CheckBox Name="RemoveITStatue" IsChecked="{Binding Settings.RemoveITStatue}" Content="Remove Statue in Icefire Treetop" Margin="0,2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Starts the game with the statue next to the gate in Icefire Treetop removed." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Starting Area" Grid.RowSpan="2" Grid.Column="1">
                        <StackPanel Margin="2">
                            <CheckBox Name="VoDStartCheck" Content="Village of Departure" IsChecked="{Binding Settings.VillageStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=RoYStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=AnnwfnStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=IBStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=ITStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=DFStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=FrostGiantsStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=TakaStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=ValhallaStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=DSLMStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=ACStartCheck, Path=IsChecked}" Value="False"/>
                                                    <Condition Binding="{Binding ElementName=MaliceStartCheck, Path=IsChecked}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="RoYStartCheck" Content="Roots of Yggdrasil" IsChecked="{Binding Settings.RootsStart}"/>
                            <CheckBox Name="AnnwfnStartCheck" Content="Annwfn" IsChecked="{Binding Settings.AnnwfnStart}"/>
                            <CheckBox Name="IBStartCheck" Content="Immortal Battlefield" IsChecked="{Binding Settings.ImmortalStart}"/>
                            <CheckBox Name="ITStartCheck" Content="Icefire Treetop" IsChecked="{Binding Settings.IcefireStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomLadder, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="DFStartCheck" Content="Divine Fotress" IsChecked="{Binding Settings.DivineStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="FrostGiantsStartCheck" Content="Shrine of the Frost Giants" IsChecked="{Binding Settings.FrostGiantsStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="TakaStartCheck" Content="Takamagahara Shrine" IsChecked="{Binding Settings.TakaStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="ValhallaStartCheck" Content="Valhalla" IsChecked="{Binding Settings.ValhallaStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="DSLMStartCheck" Content="Dark Star Lord's Mausoleum" IsChecked="{Binding Settings.DarkStarStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="ACStartCheck" Content="Ancient Chaos" IsChecked="{Binding Settings.AncientStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <CheckBox Name="MaliceStartCheck" Content="Hall of Malice" IsChecked="{Binding Settings.MaliceStart}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=RandomGates, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <StackPanel.ToolTip>
                                <ToolTip Style="{StaticResource TootltipStyle}">
                                    <TextBlock Text="If one area is selected it will be the starting area, if more than one area is selected the starting area will be randomly chosen from them." />
                                </ToolTip>
                            </StackPanel.ToolTip>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Other">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Quality of Life" Grid.Row="0" Grid.ColumnSpan="2">
                        <StackPanel >
                            <CheckBox Name="AutoScanCheck" IsChecked="{Binding Settings.AutoScanTablets}" Content="Auto-scan Holy Tablets" Margin="2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Walking in front of Holy Tablets will add them to the list of warp locations automatically." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <CheckBox Name="AutoPlaceCheck" IsChecked="{Binding Settings.AutoPlaceSkulls}" Content="Auto-place Crystal Skulls" Margin="2">
                                <CheckBox.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Automatically places the Crystal Skulls on the corresponding bust in Nibiru when picked up." />
                                    </ToolTip>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            <StackPanel Orientation="Horizontal" Margin="21,0,0,2" Height="22">
                                <TextBlock Text="Starting Money" Margin="0,2,9,2"/>
                                <TextBox x:Name="MoneyTextBox" Width="30" HorizontalAlignment="Stretch" Margin="0,2,0,0">
                                    <Binding Path="Settings.StartingMoney" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:IntRangeRule Min="0" Max="999"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox>
                                <StackPanel.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Amount of money you start the game with. Value between 0 and 999." />
                                    </ToolTip>
                                </StackPanel.ToolTip>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="21,0,0,2" Height="22">
                                <TextBlock Text="Starting Weights" Margin="0,2,2,2"/>
                                <TextBox x:Name="WeightTextBox" Width="30" HorizontalAlignment="Stretch" Margin="0,2,0,0">
                                    <Binding Path="Settings.StartingWeights" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:IntRangeRule Min="0" Max="100"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox>
                                <StackPanel.ToolTip>
                                    <ToolTip Style="{StaticResource TootltipStyle}">
                                        <TextBlock Text="Amount of weights you start the game with. Value between 0 and 100." />
                                    </ToolTip>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Item Chest Colour" Grid.Row="1" Grid.Column="0">
                        <StackPanel Grid.Row="0" Grid.Column="1">
                            <RadioButton Content="Blue" IsChecked="{Binding Settings.ItemChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Blue}}"/>
                            <RadioButton Content="Turquise" IsChecked="{Binding Settings.ItemChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Turquise}}"/>
                            <RadioButton Content="Red" IsChecked="{Binding Settings.ItemChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Red}}"/>
                            <RadioButton Content="Pink" IsChecked="{Binding Settings.ItemChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Pink}}"/>
                            <RadioButton Content="Yellow" IsChecked="{Binding Settings.ItemChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Yellow}}"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Weight Chest Colour" Grid.Row="1" Grid.Column="1">
                        <StackPanel Grid.Row="0" Grid.Column="1">
                            <RadioButton Content="Blue" IsChecked="{Binding Settings.WeightChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Blue}}"/>
                            <RadioButton Content="Turquise" IsChecked="{Binding Settings.WeightChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Turquise}}"/>
                            <RadioButton Content="Red" IsChecked="{Binding Settings.WeightChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Red}}"/>
                            <RadioButton Content="Pink" IsChecked="{Binding Settings.WeightChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Pink}}"/>
                            <RadioButton Content="Yellow" IsChecked="{Binding Settings.WeightChestColour, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static main:ChestColour.Yellow}}"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox Header="Seed" VerticalAlignment="Bottom" Height="105" Margin="5,0,5,5">
            <StackPanel>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="Seed:"/>
                    <TextBox Grid.Row="0" x:Name="SeedTextBox" Margin="95,5,50,5">
                        <Binding Path="Seed" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:IntRangeRule Min="-2147483648" Max="2147483647"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                    <Button Grid.Row="0" Height="20" Content="Roll" Command="{Binding RerollCommand}" Margin="0,5,5,4" RenderTransformOrigin="1.033,0.55" HorizontalAlignment="Right" Width="40" />

                    <Label Grid.Row="1" Content="Settings String:"/>
                    <TextBox Grid.Row="1" x:Name="SettingsStringTextBox" HorizontalAlignment="Stretch" Margin="95,5,90,5" Text="{Binding Path=SettingsString}"/>
                    <Button Grid.Row="1" Height="20" Margin="0,5,50,5" Content="Get" Command="{Binding GenerateSettingsStringCommand}" HorizontalAlignment="Right" Width="35"/>
                    <Button Grid.Row="1" Height="20" Width="40" Margin="0,5,5,5" Content="Apply" Command="{Binding ApplySettingsStringCommand}" HorizontalAlignment="Right"/>
                </Grid>
                <Button HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="100" Content="Generate" Command="{Binding GenerateCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SeedTextBox}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SkullTextBox}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=CursesTextBox}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=GuardiansTextBox}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MoneyTextBox}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=WeightTextBox}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </GroupBox>
    </Grid>
</Window>
